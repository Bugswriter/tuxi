#!/usr/bin/env sh


###############################
#####      Constants      #####
###############################

LANGUAGE=""

###############################
#####      Functions      #####
###############################

help_text () {
    printf "%bUsage:%b tuxi %b[options]%b %bquery%b\n"  "$G" "$N"  "$Y" "$N"  "$M" "$N"
    printf "\n"
    printf "%bOptions:%b\n"                             "$G" "$N"
    printf "  -h                    Show this help message and exit.\n"
    printf "  -r                    Raw search results.\n"
    printf "                        (no pretty output, no colors)\n"
    printf "  -q                    Only output search results.\n"
    printf "                        (silences \"Did you mean?\", greeting, usage)\n"
    printf "\n"
    printf "%bReport bugs at%b %bhttps://github.com/Bugswriter/tuxi/issues%b\n"  "$G" "$N"  "$C" "$N"
}

# Checks if dependencies are installed.
check_deps() {
    while [ -n "$1" ]; do
        if [ ! "$(command -v $1)" ]; then
            error_msg "\"$1\" not found!"
            exit 2
        fi
        shift
    done
}

info_msg() {
    printf "%b>%b %s\n"  "$G" "$N" "$*"
}

error_msg() {
    printf "%b%s%b\n"  "$R" "$*" "$N"
}

# Scrap HTML with external arguments
snipcall() {
    com="$(echo "$google_html" | eval "$@")"
    [ -n "$com" ] && output "$com" && exit 0
}


#############################
##### Dependency check  #####
#############################

# pup : https://github.com/ericchiang/pup
# recode : https://github.com/rrthomas/recode
# jq : https://github.com/stedolan/jq
check_deps "pup" "recode" "jq"


###############################
#####       Defaults      #####
###############################

# system language fallback
LANG=$(echo $LANG | sed 's/\..*//')

# color codes
N="\033[0m"    # Reset
R="\033[1;31m" # Red
G="\033[1;32m" # Green
Y="\033[1;33m" # Yellow
M="\033[1;35m" # Magenta
C="\033[1;36m" # Cyan

# options
raw=false
quiet=false

# search result output format (changes if raw=true)
output() { 
    printf "%b---%b\n%s\n%b---%b\n"  "$G" "$N" "$*" "$G" "$N"
}


#############################
#####     Getopts       #####
#############################

# -h : help
# -r : raw search result
# -q : silences greeting and did you mean
while getopts "hrq" OPT; do
    case "$OPT" in
    h)
        help_text
        exit 0
        ;;
    r)  
        raw=true
        ;;
    q)  
        quiet=true
        ;;
    *)
        help_text | head -n 1
        exit 1
    esac
done
# shifts to query
shift $((OPTIND-1))


#############################
#####   Raw formatting  #####
#############################

# If raw=true: No colors, No pretty output
if $raw; then
    N=""; R=""; G=""; Y=""; M=""; C="";

    output () { 
        printf "%s\n" "$*"
    }
fi


#############################
#####    Query check    #####
#############################

# If query is empty: exit
# If quiet=false: Prints greeting and usage
if [ -z "$1" ]; then
if [ $quiet = "false" ]; then
    printf "Hi, I'm Tuxi. Ask me anything!\n"
    help_text | head -n 1 
fi
exit 0
fi
    
# Else, all arguments are saved in $query
query="$*"


##############################
##### Snippet extraction #####
##############################

user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:53.0) Gecko/20100101 Firefox/53.0"
google_url="https://www.google.com/search?hl="${LANGUAGE:="${LANG:=en_US}"}""

# Response from Google via cURL (-G: get, -s: silent) 
google_html=$(curl -Gs --compressed "$google_url" --user-agent "$user_agent" --data-urlencode "q=$query")


## Snippet Priority ##
# Did you mean
# Math
# Knowledge Graph - top
# Basic Answers
# Rich Answers
# Featured Snippets
# Lyrics
# Weather
# Units Convertion
# Currency Convertion
# Translate
# Learn to pronounce
# Knowledge Graph - right

# did you mean ( eg: linux torvalds ) Because we all know his real name is linux, not linus.
# silenced if quiet=true
if [ $quiet = "false" ]; then
    did_you_mean="$(echo "$google_html" | pup 'a.gL9Hy > b text{}' | sed ':a;N;$!ba;s/\n/ /g' | recode html..ISO-8859-1)"
    [ -n "$did_you_mean" ] && info_msg "Did you mean $did_you_mean?"
fi


# Math ( eg: log_2(3) * pi^e )
snipcall "pup 'span.qv3Wpe text{}' | sed 's/\n\ //g' | recode html..ISO-8859-1"

# Knowledge Graph - top (list) ( eg: the office cast )
snipcall "pup 'div.dAassd json{}' | jq -r '.[] | .children | .[] | .text' | sed ':a;N;\$!ba;s/\n/ /g;s/null/\n/g' | sed '1s/.*/* &/;2,\$s/.*/*&/;\$d' | recode html..ISO-8859-1"

# Basic Answers ( eg: tuxi christmas day )
snipcall "pup 'div.zCubwf text{}' | sed 's/\n//g' | recode html..ISO-8859-1"

# Rich Answers ( eg: elevation of mount everest )
snipcall "pup 'div.XcVN5d text{}' | recode html..ISO-8859-1"

# Featured Snippets ( eg: who is garfield )
snipcall "pup 'span.hgKElc text{}' | tr -d '\n' | recode html..ISO-8859-1 | tr ' ' '\0' | xargs -0 -n10"

# Lyrics ( eg: gecgecgec lyrics )
snipcall "pup 'div.bbVIQb text{}' | recode html..ISO-8859-1"

#Lyrics for US users, above does not work for US
snipcall "pup 'span[jsname=\"YS01Ge\"] text{}' | recode html..ISO-8859-1"

# Weather ( eg: weather new york)
# snipcall "pup 'div.UQt4rd json{}' | jq -r '.. | .text?, .alt?'| sed '/null/d' |  sed '\$!N; /^\(.*\)\n\1$/!P; D' | sed '4,5d;2s/.*/&ºC/;2,\${N;s/\n/\t/;};3s/.*/&ºF/;\$s/\t/\t\t/' | recode html..ISO-8859-1"
weather=$(echo "$google_html" | pup 'div.UQt4rd json{}' | jq -r '.. | .text?, .alt?' | sed '/null/d' | sed '$!N; /^\(.*\)\n\1$/!P; D')
    if [ -n "$weather" ]; then
        if [ $(echo "$weather" | sed -n 2p) -gt $(echo "$weather" | sed -n 3p) ]; then 
            weather="$(printf '%b\n' "$weather" | sed -e 2','3'!b' -e ''2'h;'2'!H;'3'!d;x;s/^\([[:print:]'"$(printf '\001\002\003\004\005\006\007\010\011\013\014\015\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037\177')"']*\)\(.*\n\)\(.*\)/\3\2\1/')"
        fi
        printf '%b\n' "$weather" | sed '4,5d;2s/.*/&ºC/;2,${N;s/\n/\t/;};3s/.*/&ºF/;$s/\t/\t\t/' | recode html..ISO-8859-1 && exit 0
    fi


# Units Conversion ( eg: 1m into 1 cm )
snipcall "pup '#NotFQb json{}' | jq -r '.[] | .children | .[0] | .value' | recode html..ISO-8859-1"

# Currency Conversion ( eg: 1 USD in rupee )
snipcall "pup '.SwHCTb text{}' | sed 's/\n//g;s/\ /\0/g' | recode html..ISO-8859-1"

# Translate ( eg: Vais para cascais? em ingles )
snipcall "pup 'pre.XcVN5d json{}' | jq -r '[.[] | .children | .[] | select(.class!=\"BCGytf\")][1] | .text' | sed 's/null//g' | recode html..ISO-8859-1"

# Translate ( eg: Vais para cascais? em ingles )
snipcall "pup 'pre.XcVN5d json{}' | jq -r '[.[] | .children | .[] | select(.class!=\"BCGytf\")][1] | .text' | sed 's/null//g' | recode html..ISO-8859-1"

# Learn to pronounce ( eg: pronounce linux )
snipcall "pup 'div.fQ02Rb.eDzgme span.seLqNc text{}' | paste -s -d ' ' | sed 's/\s/∙/g'"

# Knowledge Graph - right ( eg: the office )
snipcall "pup 'div.kno-rdesc span' | sed -n '2p' | awk '{\$1=\$1;print}' | recode html..ISO-8859-1 | tr ' ' '\0' | xargs -0 -n10"

# IP ( eg: what is my ip )
snipcall "pup 'div.NEM4H.VL3Jfb.BmP5tf:first-child text{}' | recode html..ISO-8859-1"

# Else
error_msg "No Result!" && exit 1
